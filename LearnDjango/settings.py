"""
Django settings for LearnDjango project.

Generated by 'django-admin startproject' using Django 3.0.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import configparser

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# 配置文件
config = configparser.ConfigParser()
config.read(os.path.join(BASE_DIR, 'LearnDjango/config.ini'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config.get('SECRET_KEY', 'secret_key')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 注册djangorestframework
    'rest_framework',
    # 注册django-filter
    'django_filters',
    # 注册app，用于生成测试平台接口文档
    'drf_yasg',

    # 注册子应用projects
    'projects.apps.ProjectsConfig',
    # 注册子应用interface
    'interfaces.apps.InterfacesConfig',

]

REST_FRAMEWORK = {
    # 默认响应渲染类
    'DEFAULT_RENDERER_CLASSES': [
        # json渲染器为第一优先级
        'rest_framework.renderers.JSONRenderer',
        # 可浏览的浏览器中html格式的API渲染器为第二优先级
        'rest_framework.renderers.BrowsableAPIRenderer',
    ],
    # 指定用于支持coreapi的schema,用于生成测试平台的接口文档(会在drf>=3.12版本中移除，官方推荐使用drf-yasg)
    'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.coreapi.AutoSchema',
    # 全局指定过滤引擎,对所有类视图有效。也可以在类视图中单独指定过滤引擎，只对当前类视图有效
    # 全局指定排序过滤引擎
    # 全局指定django-filter过滤引擎
    'DEFAULT_FILTER_BACKENDS': [
        'rest_framework.filters.OrderingFilter',
        'django_filters.rest_framework.DjangoFilterBackend',
    ],
    # 指定全局分页引擎
    # 'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'DEFAULT_PAGINATION_CLASS': 'utils.custom_pagination.PageNumberPaginationCustom',
    # 同时必须指定每页要展示的数据条数(如果指定了自定义分页引擎，且在自定义分页引擎中指定了`page_size`，则在这里不需要再配置`PAGE_SIZE`了)
    # 'PAGE_SIZE': 3,
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 在测试post请求时可以先将csrf此中间件进行注释
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'LearnDjango.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'LearnDjango.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    # }
    'default': {
        # 指定数据库引擎
        'ENGINE': 'django.db.backends.mysql',
        # 指定数据库名称
        'NAME': config['MysqlDB']['DBName'],
        # 指定数据库用户名
        'USER': config['MysqlDB']['DBUser'],
        # 指定数据库密码
        'PASSWORD': config['MysqlDB']['DBPassword'],
        # 指定数据库的host
        'HOST': config['MysqlDB']['DBHost'],
        # 指定数据库的port
        'PORT': config.getint('MysqlDB', 'DBPort')
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

# LANGUAGE_CODE = 'en-us'
# TIME_ZONE = 'UTC'
# 更改默认语言为中文
LANGUAGE_CODE = 'zh-hans'
# 更改时区为上海
TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
